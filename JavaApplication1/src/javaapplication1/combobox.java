/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.management.StringValueExp;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author td-pc
 */
public class combobox extends javax.swing.JFrame {

    Connection con;
    String user = "root";
    String pass = "";
    String url = "jdbc:mysql://localhost:3306/sql?zeroDateTimeBehavior=CONVERT_TO_NULL";
         String driver = "com.mysql.cj.jdbc.Driver";

    /**
     * Creates new form combobox
     */
    public combobox() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbbsach = new javax.swing.JComboBox<>();
        txtname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtmasach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtnamxuatban = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtsoluong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtmota = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtanh = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbsach = new javax.swing.JTable();
        btnthem = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btntimkiem = new javax.swing.JButton();
        txttimkiem = new javax.swing.JTextField();
        cbbnxb = new javax.swing.JComboBox<>();
        cbbmatg = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        cbbsach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chose SP--" }));
        cbbsach.setToolTipText("");
        cbbsach.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbsachItemStateChanged(evt);
            }
        });
        cbbsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbsachActionPerformed(evt);
            }
        });

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã loại sách");

        jLabel2.setText("Tên sách");

        txtmasach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmasachActionPerformed(evt);
            }
        });

        jLabel3.setText("Mã Sách");

        jLabel4.setText("Mã Nhà Xuất Bản");

        jLabel5.setText("Mã Tác Giả");

        txtnamxuatban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamxuatbanActionPerformed(evt);
            }
        });

        jLabel6.setText("Năm xuất bản");

        txtsoluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsoluongActionPerformed(evt);
            }
        });

        jLabel7.setText("Số Lương");

        txtmota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmotaActionPerformed(evt);
            }
        });

        jLabel8.setText("Mô tả ");

        txtanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtanhActionPerformed(evt);
            }
        });

        jLabel9.setText("Ảnh");

        tbsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Loại Sách", "Tên Sách", "Mã Loại", "Mã Nhà Xuất Bản", "Mã Tác Giả", "Năm Xuất Bản", "Số Lượng", "Mô tả", "Ảnh"
            }
        ));
        tbsach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbsachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbsach);

        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btntimkiem.setText("Tìm Kiếm");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });

        txttimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimkiemActionPerformed(evt);
            }
        });

        cbbnxb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chose SP--" }));
        cbbnxb.setToolTipText("");
        cbbnxb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbnxbItemStateChanged(evt);
            }
        });

        cbbmatg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chose SP--" }));
        cbbmatg.setToolTipText("");
        cbbmatg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbmatgItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(529, 529, 529)
                        .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btntimkiem)
                        .addGap(0, 414, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnthem)
                                .addGap(34, 34, 34)
                                .addComponent(btnsua)
                                .addGap(40, 40, 40)
                                .addComponent(btnxoa)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                            .addComponent(cbbsach, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtanh, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtmota, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                        .addComponent(txtnamxuatban, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtmasach, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(52, 52, 52)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbbnxb, 0, 175, Short.MAX_VALUE)
                                            .addComponent(cbbmatg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntimkiem)
                    .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmasach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbbsach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbbnxb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbbmatg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnamxuatban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthem)
                    .addComponent(btnxoa)
                    .addComponent(btnsua))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        try {
            showcombobox();
            showmanxb();
            showtacgia();
            showtable();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_formComponentShown

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtnameActionPerformed

    private void cbbsachItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbsachItemStateChanged
//        try {// TODO add your handling code here:
//        String tenloai = cbbsach.getSelectedItem().toString();
//        if(tenloai.equals("--Chose SP--"))
//        { 
//            txtname.setText("");
//        }else{
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            con = DriverManager.getConnection(url, user, pass);
//            String sql = "SELECT Tenloai from sach Where Maloai = N'"+tenloai+"'";
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(sql);
//            if (rs.next()){
//                txtname.setText(rs.getString("Tenloai"));
//            }
//        }
//        }catch(Exception e){
//            
//        }
    }//GEN-LAST:event_cbbsachItemStateChanged

    private void txtmasachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmasachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmasachActionPerformed

    private void txtnamxuatbanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamxuatbanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamxuatbanActionPerformed

    private void txtsoluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsoluongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsoluongActionPerformed

    private void txtmotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmotaActionPerformed

    private void txtanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtanhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtanhActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        // TODO add your handling code here:
        String masach = txtmasach.getText();
        String tensach = txtname.getText();
        String maloaisach = cbbsach.getSelectedItem().toString();
        String manhaxuatban = cbbnxb.getSelectedItem().toString();
        String matacgia = cbbmatg.getSelectedItem().toString();
        String namxuatban = txtnamxuatban.getText();
        String soluong = txtsoluong.getText();
        String mota = txtmota.getText();
        String anh = txtanh.getText();

        Connection con = null;
        try {
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);

            String sql = "UPDATE sach SET Tensach = ?, Maloai = ?, Manxb = ?, Matacgia = ?, Namxb = ?, Soluong = ?, Mota = ?, Anh = ? WHERE Masach = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, tensach);
            pstmt.setString(2, maloaisach);
            pstmt.setString(3, manhaxuatban);
            pstmt.setString(4, matacgia);
            pstmt.setString(5, namxuatban);
            pstmt.setString(6, soluong);
            pstmt.setString(7, mota);
            pstmt.setString(8, anh);
            pstmt.executeUpdate();
            pstmt.close();
            con.close();
            showtable();
            JOptionPane.showMessageDialog(this, "Sửa thành công");
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa");
        }
    }//GEN-LAST:event_btnsuaActionPerformed

    private void cbbnxbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbnxbItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbnxbItemStateChanged

    private void cbbmatgItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbmatgItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbmatgItemStateChanged

    private void cbbsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbsachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbsachActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        // TODO add your handling code here:
        try {
            String masach = txtmasach.getText();
            String tensach = txtname.getText();
            String maloaisach = cbbsach.getSelectedItem().toString();
            String manhaxuatban = cbbnxb.getSelectedItem().toString();
            String matacgia = cbbmatg.getSelectedItem().toString();
            String namxuatban = txtnamxuatban.getText();
            String soluong = txtsoluong.getText();
            String mota = txtmota.getText();
            String anh = txtanh.getText();

            if (masach.isEmpty() || tensach.isEmpty() || maloaisach.isEmpty() || manhaxuatban.isEmpty() || matacgia.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin");
                return;
            }
            if (checkTrungma(masach)) {
                JOptionPane.showMessageDialog(this, "Ma sach da ton tai");
                return;
            }
            if (!isNumeric(namxuatban) || !isNumeric(soluong)) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số cho năm xuất bản và số lượng");
            return;
        }
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);

            String sql = "INSERT INTO sach (Masach, Tensach, Maloai, Manxb, Matacgia, Namxb, Soluong, Mota, Anh) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, masach);
            pstmt.setString(2, tensach);
            pstmt.setString(3, maloaisach);
            pstmt.setString(4, manhaxuatban);
            pstmt.setString(5, matacgia);
            pstmt.setString(6, namxuatban);
            pstmt.setString(7, soluong);
            pstmt.setString(8, mota);
            pstmt.setString(9, anh);

            int rowsAffected = pstmt.executeUpdate();
            pstmt.close();
            con.close();

            if (rowsAffected > 0) {
                showtable();
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm mới thất bại");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm mới");
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số cho năm xuất bản và số lượng");
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void tbsachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbsachMouseClicked
        // TODO add your handling code here:
        try {
            int i = tbsach.getSelectedRow();
            DefaultTableModel tm = (DefaultTableModel) tbsach.getModel();
            txtmasach.setText(tm.getValueAt(i, 0).toString());
            txtname.setText(tm.getValueAt(i, 1).toString());
            cbbsach.setSelectedItem(tm.getValueAt(i, 2).toString());
            cbbnxb.setSelectedItem(tm.getValueAt(i, 3).toString());
            cbbmatg.setSelectedItem(tm.getValueAt(i, 4).toString());
            txtnamxuatban.setText(tm.getValueAt(i, 5).toString());
            txtsoluong.setText(tm.getValueAt(i, 6).toString());
            txtmota.setText(tm.getValueAt(i, 7).toString());
            txtanh.setText(tm.getValueAt(i, 8).toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Loi he thong");
        }
    }//GEN-LAST:event_tbsachMouseClicked

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        // TODO add your handling code here:
        String masach = txtmasach.getText();

        try {
            Connection con = null;
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String sql = "DELETE FROM sach WHERE Masach = ?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, masach);
            int rowsDeleted = pstmt.executeUpdate();
            pstmt.close();
            con.close();
            if (rowsDeleted > 0) {
                showtable();
                JOptionPane.showMessageDialog(this, "Xóa thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy tác giả với mã " + masach);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa");
        }
    }//GEN-LAST:event_btnxoaActionPerformed
    
 
    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
        // TODO add your handling code here:
//        Connection con = null;
//
//        try {
//            String timkiem = txttimkiem.getText();
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            con = DriverManager.getConnection(url, user, pass);
//            String SQL = "Select * From sach Where "
//                    + "Masach LIKE '%" + timkiem + "%' and "
//                    + "Tensach LIKE '%" + timkiem + "%' and "
//                    + "Maloai LIKE '%" + timkiem + "%' and "
//                    + "Matacgia LIKE '%" + timkiem + "%' and "
//                    + "Namxb LIKE '%" + timkiem + "%' and "
//                    + "Soluong LIKE '%" + timkiem + "%' and "
//                    + "Mota LIKE '%" + timkiem + "%' and "
//                    + "Anh LIKE '%" + timkiem + "%' and "
//                    + "Manxb LIKE '%" + timkiem + "%' ";
//            Statement st = con.createStatement();
//            ResultSet rs = st.executeQuery(SQL);
//            //B4: Hiển thị dữ liệu từ ResultSet lên JTable
//            String[] rowhead = {"Mã loại sách", "Tên sách", "Mã loại", "Mã nhà xuất bản", "Mã tác giả", "Năm xuất bản", "Số lượng", "Mô tả", "Ảnh"};
//
//            DefaultTableModel tb = new DefaultTableModel(rowhead, 0);
//            while (rs.next()) {
//                Vector v = new Vector();
//                v.add(rs.getString(1));
//                v.add(rs.getString(2));
//                v.add(rs.getString(3));
//                v.add(rs.getString(4));
//                v.add(rs.getString(5));
//                v.add(rs.getString(6));
//                v.add(rs.getString(7));
//                v.add(rs.getString(8));
//                v.add(rs.getString(9));
//                tb.addRow(v);
//            }
//            tbsach.setModel(tb);
//            //Đóng kết nối
//            st.close();
//            con.close();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
        Connection con = null;

        try {
            String timkiem = txttimkiem.getText();
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String SQL = "SELECT * FROM sach WHERE "
                    + "Masach LIKE ? OR "
                    + "Tensach LIKE ? OR "
                    + "Maloai LIKE ? OR "
                    + "Matacgia LIKE ? OR "
                    + "Namxb LIKE ? OR "
                    + "Soluong LIKE ? OR "
                    + "Mota LIKE ? OR "
                    + "Anh LIKE ? OR "
                    + "Manxb LIKE ?";
            PreparedStatement statement = con.prepareStatement(SQL);
            for (int i = 1; i <= 9; i++) {
                statement.setString(i, "%" + timkiem + "%");
            }
            ResultSet rs = statement.executeQuery();

            // Hiển thị dữ liệu từ ResultSet lên JTable
            String[] rowhead = {"Mã loại sách", "Tên sách", "Mã loại", "Mã nhà xuất bản", "Mã tác giả", "Năm xuất bản", "Số lượng", "Mô tả", "Ảnh"};
            DefaultTableModel tb = new DefaultTableModel(rowhead, 0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                v.add(rs.getString(9));
                tb.addRow(v);
            }
            tbsach.setModel(tb);

            // Đóng kết nối và các đối tượng tạo ra
            rs.close();
            statement.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btntimkiemActionPerformed

    private boolean checkTrungma(String masach) throws ClassNotFoundException, SQLException {

        Class.forName(driver);
        con = DriverManager.getConnection(url, user, pass);
        String sql = "Select Masach from sach where Masach = '" + masach + "'";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(sql);
        if (rs.next()) {
            return true;
        }
        return false;

    }
    private boolean isNumeric(String str) {
    if (str == null || str.length() == 0) {
        return false;
    }
    
    for (char c : str.toCharArray()) {
        if (!Character.isDigit(c)) {
            return false;
        }
    }
    
    return true;
}
    private void txttimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimkiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(combobox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(combobox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(combobox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(combobox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new combobox().setVisible(true);
            }
        });
    }

    public void showcombobox() throws ClassNotFoundException, SQLException {
        try {
            Connection con = null;
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String sql = "SELECT * from loaisach";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
//            String masach = rs.getString("Masach");
//            String tensach = rs.getString("Tensach");
                cbbsach.addItem(rs.getString("Maloai"));
            }
            con.close();
            st.close();
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void showmanxb() throws ClassNotFoundException, SQLException {
        try {
            Connection con = null;
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String sql = "SELECT * from nhaxuatban";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
//            String masach = rs.getString("Masach");
//            String tensach = rs.getString("Tensach");
                cbbnxb.addItem(rs.getString("Manxb"));
            }
            con.close();
            st.close();
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void showtacgia() throws ClassNotFoundException, SQLException {
        try {
            Connection con = null;
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String sql = "SELECT * from tacgia";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
//            String masach = rs.getString("Masach");
//            String tensach = rs.getString("Tensach");
                cbbmatg.addItem(rs.getString("Matacgia"));
            }
            con.close();
            st.close();
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void showtable() throws ClassNotFoundException, SQLException {
        tbsach.removeAll();
        try {
            Connection con = null;
            Class.forName(driver);
            con = DriverManager.getConnection(url, user, pass);
            String sql = "SELECT * from sach";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            String[] rowhead = {"Mã loại sách", "Tên sách", "Mã loại", "Mã nhà xuất bản", "Mã tác giả", "Năm xuất bản", "Số lượng", "Mô tả", "Ảnh"};
            DefaultTableModel model = new DefaultTableModel(rowhead, 0);
            while (rs.next()) {
                Vector vt = new Vector();
                vt.add(rs.getString("Masach"));
                vt.add(rs.getString("Tensach"));
                vt.add(rs.getString("Maloai"));
                vt.add(rs.getString("Manxb"));
                vt.add(rs.getString("Matacgia"));
                vt.add(rs.getString("Namxb"));
                vt.add(rs.getString("Soluong"));
                vt.add(rs.getString("Mota"));
                vt.add(rs.getString("Anh"));
                model.addRow(vt);
            }
            tbsach.setModel(model);
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> cbbmatg;
    private javax.swing.JComboBox<String> cbbnxb;
    private javax.swing.JComboBox<String> cbbsach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbsach;
    private javax.swing.JTextField txtanh;
    private javax.swing.JTextField txtmasach;
    private javax.swing.JTextField txtmota;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnamxuatban;
    private javax.swing.JTextField txtsoluong;
    private javax.swing.JTextField txttimkiem;
    // End of variables declaration//GEN-END:variables
}
